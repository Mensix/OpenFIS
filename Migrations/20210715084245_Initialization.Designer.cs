// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpenFIS;

namespace OpenFIS.Migrations
{
    [DbContext(typeof(FisDbContext))]
    [Migration("20210715084245_Initialization")]
    partial class Initialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("OpenFIS.Models.Athlete", b =>
                {
                    b.Property<int>("FisCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("fis_code")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nation");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("FisCode")
                        .HasName("pk_athletes");

                    b.ToTable("athletes");
                });

            modelBuilder.Entity("OpenFIS.Models.AthleteResultModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AthleteResultId")
                        .HasColumnType("integer")
                        .HasColumnName("athlete_result_id");

                    b.Property<string>("CompetitionDate")
                        .HasColumnType("text")
                        .HasColumnName("competition_date");

                    b.Property<int?>("CompetitionPlaceId")
                        .HasColumnType("integer")
                        .HasColumnName("competition_place_id");

                    b.Property<int>("CompetitionType")
                        .HasColumnType("integer")
                        .HasColumnName("competition_type");

                    b.HasKey("Id")
                        .HasName("pk_athlete_results");

                    b.HasIndex("AthleteResultId")
                        .HasDatabaseName("ix_athlete_results_athlete_result_id");

                    b.HasIndex("CompetitionPlaceId")
                        .HasDatabaseName("ix_athlete_results_competition_place_id");

                    b.ToTable("athlete_results");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.CompetitionPlace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<int?>("ConstructionPoint")
                        .HasColumnType("integer")
                        .HasColumnName("construction_point");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<int?>("HillSize")
                        .HasColumnType("integer")
                        .HasColumnName("hill_size");

                    b.HasKey("Id")
                        .HasName("pk_competition_places");

                    b.ToTable("competition_places");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.CompetitionResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CompetitionDate")
                        .HasColumnType("text")
                        .HasColumnName("competition_date");

                    b.Property<int>("CompetitionGenderType")
                        .HasColumnType("integer")
                        .HasColumnName("competition_gender_type");

                    b.Property<int?>("CompetitionPlaceId")
                        .HasColumnType("integer")
                        .HasColumnName("competition_place_id");

                    b.Property<int>("CompetitionType")
                        .HasColumnType("integer")
                        .HasColumnName("competition_type");

                    b.HasKey("Id")
                        .HasName("pk_competition_results");

                    b.HasIndex("CompetitionPlaceId")
                        .HasDatabaseName("ix_competition_results_competition_place_id");

                    b.ToTable("competition_results");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.Competitor.CompetitorResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AthleteFisCode")
                        .HasColumnType("integer")
                        .HasColumnName("athlete_fis_code");

                    b.Property<int>("Bib")
                        .HasColumnType("integer")
                        .HasColumnName("bib");

                    b.Property<int?>("CompetitionResultId")
                        .HasColumnType("integer")
                        .HasColumnName("competition_result_id");

                    b.Property<int>("Rank")
                        .HasColumnType("integer")
                        .HasColumnName("rank");

                    b.Property<float?>("TotalPoints")
                        .HasColumnType("real")
                        .HasColumnName("total_points");

                    b.HasKey("Id")
                        .HasName("pk_competitor_results");

                    b.HasIndex("AthleteFisCode")
                        .HasDatabaseName("ix_competitor_results_athlete_fis_code");

                    b.HasIndex("CompetitionResultId")
                        .HasDatabaseName("ix_competitor_results_competition_result_id");

                    b.ToTable("competitor_results");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.Competitor.CompetitorResultJumps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CompetitorResultId")
                        .HasColumnType("integer")
                        .HasColumnName("competitor_result_id");

                    b.Property<float?>("Length")
                        .HasColumnType("real")
                        .HasColumnName("length");

                    b.Property<float?>("Point")
                        .HasColumnType("real")
                        .HasColumnName("point");

                    b.HasKey("Id")
                        .HasName("pk_competitor_result_jumps");

                    b.HasIndex("CompetitorResultId")
                        .HasDatabaseName("ix_competitor_result_jumps_competitor_result_id");

                    b.ToTable("competitor_result_jumps");
                });

            modelBuilder.Entity("OpenFIS.Models.AthleteResultModel", b =>
                {
                    b.HasOne("OpenFIS.Models.Competition.Competitor.CompetitorResult", "AthleteResult")
                        .WithMany()
                        .HasForeignKey("AthleteResultId")
                        .HasConstraintName("fk_athlete_results_competitor_results_athlete_result_id");

                    b.HasOne("OpenFIS.Models.Competition.CompetitionPlace", "CompetitionPlace")
                        .WithMany()
                        .HasForeignKey("CompetitionPlaceId")
                        .HasConstraintName("fk_athlete_results_competition_places_competition_place_id");

                    b.Navigation("AthleteResult");

                    b.Navigation("CompetitionPlace");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.CompetitionResult", b =>
                {
                    b.HasOne("OpenFIS.Models.Competition.CompetitionPlace", "CompetitionPlace")
                        .WithMany()
                        .HasForeignKey("CompetitionPlaceId")
                        .HasConstraintName("fk_competition_results_competition_places_competition_place_id");

                    b.Navigation("CompetitionPlace");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.Competitor.CompetitorResult", b =>
                {
                    b.HasOne("OpenFIS.Models.Athlete", "Athlete")
                        .WithMany()
                        .HasForeignKey("AthleteFisCode")
                        .HasConstraintName("fk_competitor_results_athletes_athlete_fis_code");

                    b.HasOne("OpenFIS.Models.Competition.CompetitionResult", null)
                        .WithMany("CompetitorsResult")
                        .HasForeignKey("CompetitionResultId")
                        .HasConstraintName("fk_competitor_results_competition_results_competition_result_id");

                    b.Navigation("Athlete");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.Competitor.CompetitorResultJumps", b =>
                {
                    b.HasOne("OpenFIS.Models.Competition.Competitor.CompetitorResult", null)
                        .WithMany("Jumps")
                        .HasForeignKey("CompetitorResultId")
                        .HasConstraintName("fk_competitor_result_jumps_competitor_results_competitor_resul");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.CompetitionResult", b =>
                {
                    b.Navigation("CompetitorsResult");
                });

            modelBuilder.Entity("OpenFIS.Models.Competition.Competitor.CompetitorResult", b =>
                {
                    b.Navigation("Jumps");
                });
#pragma warning restore 612, 618
        }
    }
}
